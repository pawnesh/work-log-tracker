{"version":3,"sources":["./src/environments/environment.ts","./src/app/task/task.component.ts","./src/app/task/task.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/task.ts","./src/app/app.module.ts","./src/app/services/task-manager.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport {Task} from '../services/task';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\nexport class TaskComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n  <mat-grid-list cols=\"6\">\n    <mat-grid-tile [colspan]=\"4\">\n     <label class=\"left\"> PROD-4150</label>\n    </mat-grid-tile>\n    <mat-grid-tile [colspan]=\"2\">\n      <button mat-raised-button color=\"primary\">Start</button>\n      <button mat-raised-button color=\"warn\">Stop</button>\n    </mat-grid-tile>\n  </mat-grid-list>","import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { TaskManagerService } from './services/task-manager.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'time-logger';\n  tasks = [];\n  taskName = new FormControl('');\n\n  constructor(private taskManager: TaskManagerService, private _snackBar: MatSnackBar) {\n\n  }\n\n  ngOnInit() {\n    // this.taskManager.load(\"[{\\\"name\\\":\\\"OPEX-1011\\\",\\\"start\\\":[\\\"2021-06-25T05:38:22.650Z\\\"],\\\"end\\\":[\\\"2021-06-25T06:33:28.028Z\\\"],\\\"id\\\":\\\"OPEX,1011\\\"},{\\\"name\\\":\\\"PROD-47277\\\",\\\"start\\\":[\\\"2021-06-25T07:41:54.566Z\\\"],\\\"end\\\":[\\\"2021-06-25T07:51:31.973Z\\\"],\\\"id\\\":\\\"PROD,47277\\\"},{\\\"name\\\":\\\"PROD-47237\\\",\\\"start\\\":[\\\"2021-06-25T07:51:37.769Z\\\",\\\"2021-06-25T10:06:27.152Z\\\",\\\"2021-06-25T11:51:15.110Z\\\",\\\"2021-06-25T12:02:34.819Z\\\"],\\\"end\\\":[\\\"2021-06-25T09:41:20.639Z\\\",\\\"2021-06-25T11:19:19.047Z\\\",\\\"2021-06-25T12:02:26.290Z\\\"],\\\"id\\\":\\\"PROD,47237\\\"},{\\\"name\\\":\\\"PROD-42803\\\",\\\"start\\\":[\\\"2021-06-25T09:41:23.910Z\\\"],\\\"end\\\":[\\\"2021-06-25T10:06:25.674Z\\\"],\\\"id\\\":\\\"PROD,42803\\\"},{\\\"name\\\":\\\"PROD-48009\\\",\\\"start\\\":[\\\"2021-06-25T11:19:25.747Z\\\",\\\"2021-06-25T12:02:24.837Z\\\"],\\\"end\\\":[\\\"2021-06-25T11:45:02.098Z\\\",\\\"2021-06-25T12:13:19.986Z\\\"],\\\"id\\\":\\\"PROD,48009\\\"}]\");\n    this.tasks = this.taskManager.getAllTask();\n  }\n\n  addTask() {\n    console.log(this.taskName.value);\n    this.taskManager.add(this.taskName.value);\n  }\n\n  startWork(indexOfelement){\n    this.taskManager.startWork(indexOfelement);\n    this.tasks[indexOfelement] = this.taskManager.getTask(indexOfelement);\n    console.log(this.tasks[indexOfelement]);\n  }\n  stopWork(indexOfelement){\n    this.taskManager.stopWork(indexOfelement);\n    this.tasks[indexOfelement] = this.taskManager.getTask(indexOfelement);\n    this.tasks[indexOfelement].calculateTimeSpent();\n    console.log(this.tasks[indexOfelement]);\n  }\n  \n  clearCache(){\n    if(confirm('This will wipe out all the records. Are you sure?')){\n      this.taskManager.cleanTask();\n      this._snackBar.open('Storage clean', 'Close');\n      this.taskManager = new TaskManagerService();\n      this.tasks = this.taskManager.getAllTask();\n    }\n  }\n\n  openShortWindow(){\n    window.open(window.location.href,'popUpWindow','height=500,width=400,left=100,top=100,resizable=yes,scrollbars=yes,toolbar=yes,menubar=no,location=no,directories=no, status=yes');\n  }\n}\n","<p>\n  <mat-toolbar>\n    <span>WorkLog Tracker</span>\n  </mat-toolbar>\n</p>\n<div class=\"container\">\n  <mat-grid-list cols=\"6\" rowHeight=\"1:1\">\n    <mat-grid-tile [colspan]=\"5\">\n      <mat-form-field class=\"input\" appearance=\"outline\">\n        <mat-label>Task name / Link</mat-label>\n        <input matInput placeholder=\"Ex. PROD-4512\" [formControl]=\"taskName\">\n        <mat-icon matSuffix>code</mat-icon>\n      </mat-form-field>\n    </mat-grid-tile>\n\n    <mat-grid-tile [colspan]=\"1\">\n      <button mat-raised-button (click)=\"addTask()\">Add</button>\n    </mat-grid-tile>\n\n  </mat-grid-list>\n  <!-- <app-task></app-task> -->\n\n  <mat-card class=\"task-card\" *ngFor=\"let task of tasks; let indexOfelement=index;\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"card-header-image\"></div>\n      <mat-card-title>\n        {{task.name}}\n      </mat-card-title>\n      <mat-card-subtitle *ngIf=\"task.timeSpent <= 60\">{{task.timeSpent}} <small>Minutes</small></mat-card-subtitle>\n      <mat-card-subtitle *ngIf=\"task.timeSpent > 60\">{{task.timeSpent/60}} <small>Hours</small></mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-actions>\n      <button mat-raised-button color=\"primary\" *ngIf=\"task.start.length == task.end.length\"\n        (click)=\"startWork(indexOfelement)\">Start</button>\n      <button mat-raised-button color=\"warn\" *ngIf=\"task.start.length != task.end.length\"\n        (click)=\"stopWork(indexOfelement)\">Stop</button>\n    </mat-card-actions>\n  </mat-card>\n\n  <mat-card *ngIf=\"tasks.length == 0\">\n    <mat-card-content class=\"blank center\">\n      <mat-icon>code</mat-icon><br>\n      <h5>No task!</h5>\n    </mat-card-content>\n  </mat-card>\n\n  <mat-divider></mat-divider>\n  <footer>\n    <nav>\n      <a href=\"javascript:void()\" (click)=\"clearCache()\">Clear All</a> |\n      <a href=\"javascript:;\" (click)=\"openShortWindow()\">Open In PopUp</a>\n    </nav>\n  </footer>\n</div>","import { Injectable } from '@angular/core';\n\n\nexport class Task{\n    name = \"\";\n    start = [];\n    end = [];\n    id = \"\";\n    timeSpent = 0;\n    constructor(name){\n        this.name = name;\n        name = this.replace(name, ' ');\n        name = this.replace(name, '-');\n        name = this.replace(name, '/');\n        name = this.replace(name, ':');\n        this.id = name;\n    }\n    replace(text, toReplace){\n        text = text.split(toReplace);\n        return text.join();\n    }\n    calculateTimeSpent = function(){\n        if(this.start.length == 0){\n            console.log('lenght is zero');\n            return 0;\n        }\n        var minutes = 0;\n        for(var i=0; i< this.start.length; i++){\n            var timeTaken = this.start[i].getTime();\n            if(this.end[i]){\n                timeTaken = this.end[i].getTime() - timeTaken; \n                minutes += timeTaken;\n            }\n        }\n        minutes = (minutes/1000)/60;\n        this.timeSpent = Math.round(minutes);\n    }\n    startWork = function(){\n        this.start.push(new Date());\n    }\n    stopWork = function(){\n        this.end.push(new Date());\n    }\n  }\n  ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatButtonModule} from '@angular/material/button'; \nimport {MatInputModule} from '@angular/material/input'; \nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { TaskComponent } from './task/task.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatDividerModule} from '@angular/material/divider'; \nimport {MatFormFieldModule} from '@angular/material/form-field'; \nimport {MatIconModule} from '@angular/material/icon';\nimport {MatSnackBarModule} from '@angular/material/snack-bar'; \nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatCardModule} from '@angular/material/card'; \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaskComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatInputModule,\n    MatGridListModule,\n    MatDividerModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatSnackBarModule,\n    MatToolbarModule,\n    MatCardModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Task } from './task';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class TaskManagerService {\n\n    constructor() {\n        var data = localStorage.getItem('records');\n        if(data){\n            this.load(data);\n        }\n    }\n\n    cleanTask(){\n        localStorage.clear();\n    }\n\n    tasks = [];\n    add = function (value) {\n        if (!value.length) {\n            console.log('empty string');\n            return;\n        }\n\n        var _task = new Task(value);\n        this.tasks.push(_task);\n        return (this.tasks.length - 1);\n    }\n    getAllTask = function () {\n        return this.tasks;\n    }\n    getTask = function (index) {\n        return this.tasks[index];\n    }\n    startWork = index => {\n        this.tasks[index].startWork();\n        this.saveInStorage();\n    }\n    stopWork = index => {\n        this.tasks[index].stopWork();\n        this.saveInStorage();\n    }\n    \n    load = function (jsonText) {\n        var tasks = JSON.parse(jsonText);\n        for (var i = 0; i < tasks.length; i++) {\n            var index = this.add(tasks[i].name);\n            this.tasks[index].start = this.converStringToDate(tasks[i].start);\n            this.tasks[index].end = this.converStringToDate(tasks[i].end);\n\n            this.tasks[index].calculateTimeSpent();\n        }\n    }\n\n    converStringToDate(array) {\n        var temp = [];\n        array.forEach(element => {\n            temp.push(new Date(element));\n        });\n        return temp;\n    }\n\n    saveInStorage() {\n        localStorage.setItem('records', JSON.stringify(this.tasks));\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}